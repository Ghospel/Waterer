// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Waterer.Data.Context;

#nullable disable

namespace Waterer.Data.Migrations
{
    [DbContext(typeof(CropDbContext))]
    partial class CropDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Waterer.Data.Entities.CropEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlantedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("Waterer.Data.Entities.CropStatusEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CropEntityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Lux")
                        .HasColumnType("real");

                    b.Property<float>("RelativeHumidity")
                        .HasColumnType("real");

                    b.Property<float>("SoilMoisture")
                        .HasColumnType("real");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CropEntityId");

                    b.ToTable("CropStatuses");
                });

            modelBuilder.Entity("Waterer.Data.Entities.CropStatusEntity", b =>
                {
                    b.HasOne("Waterer.Data.Entities.CropEntity", "CropEntity")
                        .WithMany("CropStatuses")
                        .HasForeignKey("CropEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CropEntity");
                });

            modelBuilder.Entity("Waterer.Data.Entities.CropEntity", b =>
                {
                    b.Navigation("CropStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
